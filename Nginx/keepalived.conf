# 全局配置
global_defs {
  # 有事件发生时,发送信息到那些email,可以写多个,一行一个
  notification_email {
    #cc@cc.com
  }
  # 邮件发送方地址
  #notification_email_from cc@cc.com
  # 接收方服务地址
  #smtp_server 192.168.200.1
  # 连接smtp服务器的超时时间
  #smtp_connect_timeout 30
  # 机器唯一标识,同一个群内应该是唯一
  router_id cc_backeup
}

vrrp_instance VI_1 {
  # 决定主从,只有MASTER和BACKUP2种,会根据网络情况变动
  state MASTER
  # 网卡名
  interface eth0
  # 虚拟路由的ID号,主从节点设置必须一样
  virtual_router_id 51
  # 优先级,越大越高,主从不能设置为一样,会造成IP抢占
  priority 101
  # 组播信息发送间隔,主从节点设置必须一样,默认1s
  advert_int 1
  # 验证信息
  authentication {
      auth_type PASS
      auth_pass 1111
  }
  # 虚拟IP地址
  virtual_ipaddress {
      192.168.1.77
  }

  #track_script {
  #  chk_http_port
  #}
}

virtual_server  192.168.1.77  8080   {
  # 延迟轮询时间,单位S
  delay_loop 6
  # 负载均衡调度算法,常用为rr(轮询),wlc(加权最少连接),wrr(加权轮询)
  lb_algo wrr
  # 负载均衡转发规则,一般为DR,NAT,TUN
  lb_kind DR
  # 子网掩码
  #nat_mask 255.255.255.0
  # 保持会话超时时间
  persistence_timeout 60
  # 协议
  protocol TCP
  # 真实服务器
  real_server  192.168.1.201  8080   {
    # 权重,0表示失效
    weight 3
    # 真实服务器启动时执行的脚本
    notify_up /app/keepalived/up.sh
    # 真实服务器挂了时执行的脚本
    notify_down /app/keepalived/down.sh

    # 健康检查,有HTTP_GET,SSL_GET,TCP_CHECK,SMTP_CHECK,MISC_CHECK
    HTTP_GET {
      # 检查URL配置
      url {
        # URL地址
      	path /
        # 健康检查正常状态码
      	status_code 200
      }
      # 连接超时时间,单位S
      connect_timeout 10
      # 重试次数
      nb_get_retry 3
      # 重连接的时间间隔,单位S
      delay_before_retry 3
    }

    #TCP_CHECK {
    #    connect_timeout 10
    #    nb_get_retry 3
    #    delay_before_retry 3
    #    connect_port 80
    #}
   }

   real_server  192.168.1.202  8080   {
     weight 3
     HTTP_GET {
        url {
              path /
              status_code 200
        }
        connect_timeout 10
        nb_get_retry 3
        delay_before_retry 3
      }
   }
}